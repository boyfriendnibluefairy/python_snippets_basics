##
## Soft voting in Voting Classifier object
## takes into account the class probability
## generated by each classifier. To do this,
## each classifier must have predict_proba()
## method.
##

## Let's try voting classifier on moons data set
from sklearn.datasets import make_moons
X, y = make_moons(n_samples=600, noise=0.30, random_state=42)

## Let's split the moons data set into training
## data set and test data set, test_size defaults to 0.25
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42)

## We will use three diverse classifiers for our
## voting classifier, they are
##  1) Logistic Regression
##  2) RandomForestClassifier
##  3) Support Vector Machine
from sklearn.ensemble import RandomForestClassifier, VotingClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC

voting_classifier = VotingClassifier(
    estimators=[
        ("lr", LogisticRegression(random_state=42)),
        ("rfc", RandomForestClassifier(random_state=42)),
        ("svc", SVC(random_state=42))
    ]
)

## Enable soft voting on Voting Classifer object
voting_classifier.voting = "soft"
## Enable SVC predict_proba()
voting_classifier.named_estimators["svc"].probability = True

## Let's train our object
voting_classifier.fit(X_train,y_train)
## Let's print its accuracy on our test data.
## Accuracy is given by score() function.
str = voting_classifier.score(X_test, y_test)
print(str)